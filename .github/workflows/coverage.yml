name: Coverage

on:
  push:
    branches: main
  pull_request:
    branches: "*"

jobs:
  job1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    outputs:
        testoutput: ${{ steps.step1.outputs.test }}
        coverage: ${{ steps.coverage.outputs.coverage-report }}

    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-test-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          make install-test
      - name: Run Coverage
        id: coverage
        run: |
            report=$(make coverage)
            echo "coverage-report<<$report" >> "$GITHUB_OUTPUT"

  job2:   
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    needs: job1
    steps:
      - name: Post Comment
        uses: mshick/add-pr-comment@v2
        with:
            message: |
                **Hello**
                üåè - separate job
                [${{needs.job1.outputs.testoutput}}]
                [${{needs.job1.outputs.coverage}}]
      - name: Echo
        run: echo [${{needs.job1.outputs.testoutput}}]
